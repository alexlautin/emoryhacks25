"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./app/components/Whiteboard.tsx":
/*!***************************************!*\
  !*** ./app/components/Whiteboard.tsx ***!
  \***************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ Whiteboard; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* __next_internal_client_entry_do_not_use__ default auto */ \nvar _s = $RefreshSig$();\n\nfunction Whiteboard(param) {\n    let { socket, studentId, classCode, isTeacher, onBoardClick } = param;\n    _s();\n    const canvasRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const [isDrawing, setIsDrawing] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [color, setColor] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"#000000\");\n    const [tool, setTool] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"draw\");\n    const [lastPoint, setLastPoint] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        const canvas = canvasRef.current;\n        if (!canvas) return;\n        const ctx = canvas.getContext(\"2d\");\n        if (!ctx) return;\n        // Set fixed dimensions\n        const width = 800;\n        const height = 600;\n        // Set the canvas size in actual pixels\n        canvas.width = width;\n        canvas.height = height;\n        // Set white background\n        ctx.fillStyle = \"#ffffff\";\n        ctx.fillRect(0, 0, width, height);\n        // Request initial canvas state if we're a teacher viewing a student's board\n        if (isTeacher) {\n            socket.emit(\"request-canvas-state\", {\n                classCode,\n                studentId\n            });\n        }\n        // Handle receiving draw updates\n        socket.on(\"draw-update-received\", (param)=>{\n            let { studentId: drawingStudentId, drawData, canvasState } = param;\n            if (drawingStudentId === studentId) {\n                if (canvasState) {\n                    loadCanvasState(canvasState);\n                } else if (drawData) {\n                    drawOnCanvas(drawData);\n                }\n            }\n        });\n        // Handle receiving full canvas state\n        socket.on(\"canvas-state-update\", (param)=>{\n            let { studentId: updatedStudentId, canvasState } = param;\n            if (updatedStudentId === studentId && canvasState) {\n                loadCanvasState(canvasState);\n            }\n        });\n        // Handle loading saved canvas state\n        socket.on(\"load-canvas\", (param)=>{\n            let { studentId: loadStudentId, canvasData } = param;\n            if (loadStudentId === studentId && canvasData) {\n                loadCanvasState(canvasData);\n            }\n        });\n        return ()=>{\n            socket.off(\"draw-update-received\");\n            socket.off(\"canvas-state-update\");\n            socket.off(\"load-canvas\");\n        };\n    }, [\n        socket,\n        studentId,\n        classCode,\n        isTeacher\n    ]);\n    const loadCanvasState = (canvasState)=>{\n        const canvas = canvasRef.current;\n        const ctx = canvas === null || canvas === void 0 ? void 0 : canvas.getContext(\"2d\");\n        if (!canvas || !ctx) return;\n        const img = new Image();\n        img.onload = ()=>{\n            ctx.clearRect(0, 0, canvas.width, canvas.height);\n            ctx.drawImage(img, 0, 0);\n        };\n        img.src = canvasState;\n    };\n    const drawOnCanvas = (drawData)=>{\n        var _drawData_points;\n        const canvas = canvasRef.current;\n        const ctx = canvas === null || canvas === void 0 ? void 0 : canvas.getContext(\"2d\");\n        if (!canvas || !ctx || !(drawData === null || drawData === void 0 ? void 0 : (_drawData_points = drawData.points) === null || _drawData_points === void 0 ? void 0 : _drawData_points.length)) return;\n        ctx.beginPath();\n        ctx.moveTo(drawData.points[0].x, drawData.points[0].y);\n        // Smoother line when drawing\n        if (drawData.type === \"erase\") {\n            ctx.globalCompositeOperation = \"destination-out\";\n            ctx.strokeStyle = \"rgba(0,0,0,1)\";\n        } else {\n            ctx.globalCompositeOperation = \"source-over\";\n            ctx.strokeStyle = drawData.color;\n        }\n        ctx.lineWidth = 4; // Increased line width for clarity\n        ctx.lineCap = \"round\"; // Rounded cap for smooth edges\n        ctx.lineJoin = \"round\"; // Rounded joins for smooth corners\n        for(let i = 1; i < drawData.points.length; i++){\n            ctx.lineTo(drawData.points[i].x, drawData.points[i].y);\n        }\n        ctx.stroke();\n        ctx.closePath();\n        // Reset composite operation\n        ctx.globalCompositeOperation = \"source-over\";\n    };\n    const getCanvasCoordinates = (e)=>{\n        const canvas = canvasRef.current;\n        if (!canvas) return null;\n        const rect = canvas.getBoundingClientRect();\n        const scaleX = canvas.width / rect.width;\n        const scaleY = canvas.height / rect.height;\n        return {\n            x: (e.clientX - rect.left) * scaleX,\n            y: (e.clientY - rect.top) * scaleY\n        };\n    };\n    const handlePointerDown = (e)=>{\n        if (isTeacher) {\n            if (onBoardClick) onBoardClick();\n            return;\n        }\n        const coords = getCanvasCoordinates(e);\n        if (!coords) return;\n        setIsDrawing(true);\n        setLastPoint(coords);\n        const drawData = {\n            points: [\n                coords\n            ],\n            color: tool === \"erase\" ? \"#ffffff\" : color,\n            width: 4,\n            type: tool\n        };\n        drawOnCanvas(drawData);\n    };\n    const handlePointerMove = (e)=>{\n        if (!isDrawing || isTeacher || !lastPoint) return;\n        const coords = getCanvasCoordinates(e);\n        if (!coords) return;\n        const drawData = {\n            points: [\n                lastPoint,\n                coords\n            ],\n            color: tool === \"erase\" ? \"#ffffff\" : color,\n            width: 4,\n            type: tool\n        };\n        drawOnCanvas(drawData);\n        // Get current canvas state\n        const canvas = canvasRef.current;\n        if (canvas) {\n            const canvasState = canvas.toDataURL();\n            // Emit both the draw data and canvas state\n            socket.emit(\"draw-update\", {\n                classCode,\n                studentId,\n                drawData,\n                canvasState\n            });\n        }\n        setLastPoint(coords);\n    };\n    const handlePointerUp = ()=>{\n        setIsDrawing(false);\n        setLastPoint(null);\n        // Send final canvas state when drawing ends\n        const canvas = canvasRef.current;\n        if (canvas && !isTeacher) {\n            const canvasState = canvas.toDataURL();\n            socket.emit(\"draw-update\", {\n                classCode,\n                studentId,\n                drawData: null,\n                canvasState\n            });\n        }\n    };\n    const clearCanvas = ()=>{\n        const canvas = canvasRef.current;\n        const ctx = canvas === null || canvas === void 0 ? void 0 : canvas.getContext(\"2d\");\n        if (!canvas || !ctx) return;\n        ctx.fillStyle = \"#ffffff\";\n        ctx.fillRect(0, 0, canvas.width, canvas.height);\n        // Send cleared canvas state\n        const canvasState = canvas.toDataURL();\n        socket.emit(\"draw-update\", {\n            classCode,\n            studentId,\n            drawData: null,\n            canvasState\n        });\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"relative border border-input rounded-lg shadow-md\",\n        onClick: onBoardClick,\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"canvas\", {\n                ref: canvasRef,\n                className: \"touch-none w-full h-full rounded-lg\",\n                style: {\n                    aspectRatio: \"4/3\"\n                },\n                onPointerDown: handlePointerDown,\n                onPointerMove: handlePointerMove,\n                onPointerUp: handlePointerUp,\n                onPointerLeave: handlePointerUp\n            }, void 0, false, {\n                fileName: \"/Users/alexlautin/Documents/GitHub/emoryhacks25/app/components/Whiteboard.tsx\",\n                lineNumber: 232,\n                columnNumber: 7\n            }, this),\n            !isTeacher && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"absolute bottom-4 left-4 flex gap-2 bg-background/95 backdrop-blur supports-[backdrop-filter]:bg-background/60 p-2 rounded-lg shadow-md border border-input\"\n            }, void 0, false, {\n                fileName: \"/Users/alexlautin/Documents/GitHub/emoryhacks25/app/components/Whiteboard.tsx\",\n                lineNumber: 242,\n                columnNumber: 9\n            }, this)\n        ]\n    }, void 0, true, {\n        fileName: \"/Users/alexlautin/Documents/GitHub/emoryhacks25/app/components/Whiteboard.tsx\",\n        lineNumber: 231,\n        columnNumber: 5\n    }, this);\n}\n_s(Whiteboard, \"TPLaNqvVcBGhXugcjIuzkk+M7mI=\");\n_c = Whiteboard;\nvar _c;\n$RefreshReg$(_c, \"Whiteboard\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./app/components/Whiteboard.tsx\n"));

/***/ })

});