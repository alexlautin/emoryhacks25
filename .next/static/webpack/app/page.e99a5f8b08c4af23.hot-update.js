"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./app/components/Whiteboard.tsx":
/*!***************************************!*\
  !*** ./app/components/Whiteboard.tsx ***!
  \***************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ Whiteboard; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _components_ui_button__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/components/ui/button */ \"(app-pages-browser)/./components/ui/button.tsx\");\n/* __next_internal_client_entry_do_not_use__ default auto */ \nvar _s = $RefreshSig$();\n\n\nfunction Whiteboard(param) {\n    let { socket, studentId, classCode, isTeacher = false, onBoardClick } = param;\n    _s();\n    const canvasRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const [isDrawing, setIsDrawing] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [color, setColor] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"#000000\");\n    const [width, setWidth] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(2);\n    const [tool, setTool] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"draw\");\n    const [lastPoint, setLastPoint] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    // Set up high-resolution canvas\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        const canvas = canvasRef.current;\n        if (!canvas) return;\n        const ctx = canvas.getContext(\"2d\");\n        if (!ctx) return;\n        // Get the device pixel ratio\n        const dpr = window.devicePixelRatio || 1;\n        // Set the canvas size to be 2x the display size for high resolution\n        const displayWidth = 600;\n        const displayHeight = 400;\n        canvas.width = displayWidth * 2;\n        canvas.height = displayHeight * 2;\n        // Scale the context to account for the higher resolution\n        ctx.scale(2, 2);\n        // Set up canvas\n        ctx.strokeStyle = color;\n        ctx.lineWidth = width;\n        ctx.lineCap = \"round\";\n        ctx.lineJoin = \"round\";\n        // Handle window resize\n        const handleResize = ()=>{\n            var _canvas_parentElement;\n            const rect = (_canvas_parentElement = canvas.parentElement) === null || _canvas_parentElement === void 0 ? void 0 : _canvas_parentElement.getBoundingClientRect();\n            if (!rect) return;\n            // Update canvas size while maintaining aspect ratio\n            const scale = Math.min(rect.width / displayWidth, rect.height / displayHeight);\n            canvas.style.width = \"\".concat(displayWidth * scale, \"px\");\n            canvas.style.height = \"\".concat(displayHeight * scale, \"px\");\n        };\n        window.addEventListener(\"resize\", handleResize);\n        handleResize(); // Initial size\n        // Subscribe to draw updates\n        const channel = socket.subscribe(\"classroom-\".concat(classCode));\n        channel.bind(\"draw-update\", (data)=>{\n            console.log(\"Received draw update:\", {\n                studentId: data.studentId,\n                isTeacher,\n                currentStudentId: studentId,\n                hasDrawData: !!data.drawData,\n                hasCanvasState: !!data.canvasState\n            });\n            // For teachers, show all drawings\n            // For students, skip their own drawings\n            if (!isTeacher && data.studentId === studentId) {\n                console.log(\"Skipping own drawing (not teacher)\");\n                return;\n            }\n            // Handle canvas state updates first\n            if (data.canvasState) {\n                console.log(\"Loading canvas state\");\n                const img = new Image();\n                img.onload = ()=>{\n                    console.log(\"Canvas state image loaded, drawing to canvas\");\n                    // Clear the entire canvas first\n                    ctx.clearRect(0, 0, displayWidth, displayHeight);\n                    // Draw the new state\n                    ctx.drawImage(img, 0, 0, displayWidth, displayHeight);\n                    // Reset composite operation\n                    ctx.globalCompositeOperation = \"source-over\";\n                };\n                img.onerror = (error)=>{\n                    console.error(\"Error loading canvas state:\", error);\n                };\n                img.src = data.canvasState;\n                return; // Exit after handling canvas state\n            }\n            // Handle individual draw updates\n            if (data.drawData) {\n                console.log(\"Drawing with data:\", data.drawData);\n                drawOnCanvas(data.drawData);\n            }\n        });\n        // Request initial canvas state when component mounts\n        if (isTeacher) {\n            console.log(\"Teacher view requesting initial canvas state\");\n            fetch(\"/api/pusher\", {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify({\n                    type: \"request-canvas-state\",\n                    classCode,\n                    studentId\n                })\n            }).catch(console.error);\n        }\n        return ()=>{\n            console.log(\"Cleaning up Pusher subscription\");\n            window.removeEventListener(\"resize\", handleResize);\n            channel.unbind_all();\n            socket.unsubscribe(\"classroom-\".concat(classCode));\n        };\n    }, [\n        socket,\n        classCode,\n        studentId,\n        color,\n        width,\n        isTeacher\n    ]);\n    const getCanvasCoordinates = (e)=>{\n        const canvas = canvasRef.current;\n        if (!canvas) return null;\n        const rect = canvas.getBoundingClientRect();\n        const scaleX = canvas.width / (rect.width * 2); // Account for the 2x scaling\n        const scaleY = canvas.height / (rect.height * 2);\n        const x = (e.clientX - rect.left) * scaleX;\n        const y = (e.clientY - rect.top) * scaleY;\n        return {\n            x,\n            y\n        };\n    };\n    const startDrawing = (e)=>{\n        if (isTeacher) return;\n        const coords = getCanvasCoordinates(e);\n        if (!coords) return;\n        setIsDrawing(true);\n        setLastPoint(coords);\n    };\n    const draw = (e)=>{\n        if (!isDrawing || isTeacher) return;\n        const canvas = canvasRef.current;\n        if (!canvas) return;\n        const ctx = canvas.getContext(\"2d\");\n        if (!ctx || !lastPoint) return;\n        const coords = getCanvasCoordinates(e);\n        if (!coords) return;\n        const drawData = {\n            points: [\n                lastPoint,\n                coords\n            ],\n            color,\n            width,\n            type: tool\n        };\n        drawOnCanvas(drawData);\n        // Send draw update\n        fetch(\"/api/pusher\", {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({\n                type: \"draw-update\",\n                classCode,\n                studentId,\n                drawData,\n                canvasState: null // Don't send canvas state for intermediate updates\n            })\n        }).catch(console.error);\n        setLastPoint(coords);\n    };\n    const stopDrawing = ()=>{\n        setIsDrawing(false);\n        setLastPoint(null);\n    };\n    const handlePointerDown = (e)=>{\n        if (isTeacher) {\n            if (onBoardClick) onBoardClick();\n            return;\n        }\n        const coords = getCanvasCoordinates(e);\n        if (!coords) return;\n        setIsDrawing(true);\n        setLastPoint(coords);\n    };\n    const handlePointerMove = (e)=>{\n        if (!isDrawing || isTeacher || !lastPoint) return;\n        const canvas = canvasRef.current;\n        if (!canvas) return;\n        const ctx = canvas.getContext(\"2d\");\n        if (!ctx) return;\n        const coords = getCanvasCoordinates(e);\n        if (!coords) return;\n        const drawData = {\n            points: [\n                lastPoint,\n                coords\n            ],\n            color,\n            width,\n            type: tool\n        };\n        drawOnCanvas(drawData);\n        // Send draw update through Pusher API\n        console.log(\"Sending draw update:\", {\n            studentId,\n            classCode,\n            hasDrawData: true,\n            hasCanvasState: false\n        });\n        fetch(\"/api/pusher\", {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({\n                type: \"draw-update\",\n                classCode,\n                studentId,\n                drawData,\n                canvasState: null // Don't send canvas state for intermediate updates\n            })\n        }).then((response)=>response.json()).then((data)=>{\n            console.log(\"Draw update response:\", data);\n        }).catch((error)=>{\n            console.error(\"Error sending draw update:\", error);\n        });\n        setLastPoint(coords);\n    };\n    const handlePointerUp = ()=>{\n        setIsDrawing(false);\n        setLastPoint(null);\n        // Send final canvas state when drawing ends\n        const canvas = canvasRef.current;\n        if (canvas && !isTeacher) {\n            const canvasState = canvas.toDataURL(\"image/jpeg\", 0.5); // Compress the image\n            fetch(\"/api/pusher\", {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify({\n                    type: \"draw-update\",\n                    classCode,\n                    studentId,\n                    drawData: null,\n                    canvasState\n                })\n            }).catch(console.error);\n        }\n    };\n    const clearCanvas = ()=>{\n        const canvas = canvasRef.current;\n        const ctx = canvas === null || canvas === void 0 ? void 0 : canvas.getContext(\"2d\");\n        if (!canvas || !ctx) return;\n        ctx.fillStyle = \"#ffffff\";\n        ctx.fillRect(0, 0, canvas.width, canvas.height);\n        // Send cleared canvas state\n        const canvasState = canvas.toDataURL(\"image/jpeg\", 0.5); // Compress the image\n        fetch(\"/api/pusher\", {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({\n                type: \"draw-update\",\n                classCode,\n                studentId,\n                drawData: null,\n                canvasState\n            })\n        }).catch(console.error);\n    };\n    const drawOnCanvas = (drawData)=>{\n        var _drawData_points;\n        const canvas = canvasRef.current;\n        const ctx = canvas === null || canvas === void 0 ? void 0 : canvas.getContext(\"2d\");\n        if (!canvas || !ctx || !(drawData === null || drawData === void 0 ? void 0 : (_drawData_points = drawData.points) === null || _drawData_points === void 0 ? void 0 : _drawData_points.length)) return;\n        console.log(\"Drawing points:\", drawData.points);\n        ctx.beginPath();\n        ctx.moveTo(drawData.points[0].x, drawData.points[0].y);\n        if (drawData.type === \"erase\") {\n            ctx.globalCompositeOperation = \"destination-out\";\n            ctx.strokeStyle = \"rgba(0,0,0,1)\";\n        } else {\n            ctx.globalCompositeOperation = \"source-over\";\n            ctx.strokeStyle = drawData.color;\n        }\n        ctx.lineWidth = drawData.width;\n        ctx.lineCap = \"round\";\n        ctx.lineJoin = \"round\";\n        for(let i = 1; i < drawData.points.length; i++){\n            ctx.lineTo(drawData.points[i].x, drawData.points[i].y);\n        }\n        ctx.stroke();\n        ctx.closePath();\n        // Reset composite operation\n        ctx.globalCompositeOperation = \"source-over\";\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"relative border border-input rounded-lg shadow-md\",\n        onClick: onBoardClick,\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"canvas\", {\n                ref: canvasRef,\n                width: 600,\n                height: 400,\n                className: \"touch-none w-full h-full rounded-lg \".concat(isTeacher ? \"cursor-default\" : \"cursor-crosshair\", \" \").concat(onBoardClick ? \"cursor-pointer\" : \"\"),\n                onMouseDown: startDrawing,\n                onMouseMove: draw,\n                onMouseUp: stopDrawing,\n                onMouseOut: stopDrawing,\n                onClick: onBoardClick\n            }, void 0, false, {\n                fileName: \"/Users/alexlautin/Documents/GitHub/emoryhacks25/app/components/Whiteboard.tsx\",\n                lineNumber: 346,\n                columnNumber: 7\n            }, this),\n            !isTeacher && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"absolute bottom-4 left-4 flex gap-2 bg-background/95 backdrop-blur supports-[backdrop-filter]:bg-background/60 p-2 rounded-lg shadow-md border border-input\",\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"flex items-center gap-2\",\n                    children: [\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"input\", {\n                            type: \"color\",\n                            value: color,\n                            onChange: (e)=>setColor(e.target.value),\n                            className: \"w-8 h-8 rounded cursor-pointer\"\n                        }, void 0, false, {\n                            fileName: \"/Users/alexlautin/Documents/GitHub/emoryhacks25/app/components/Whiteboard.tsx\",\n                            lineNumber: 360,\n                            columnNumber: 13\n                        }, this),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_ui_button__WEBPACK_IMPORTED_MODULE_2__.Button, {\n                            onClick: ()=>setTool(\"draw\"),\n                            variant: tool === \"draw\" ? \"default\" : \"secondary\",\n                            size: \"sm\",\n                            children: \"Draw\"\n                        }, void 0, false, {\n                            fileName: \"/Users/alexlautin/Documents/GitHub/emoryhacks25/app/components/Whiteboard.tsx\",\n                            lineNumber: 366,\n                            columnNumber: 13\n                        }, this),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_ui_button__WEBPACK_IMPORTED_MODULE_2__.Button, {\n                            onClick: ()=>setTool(\"erase\"),\n                            variant: tool === \"erase\" ? \"default\" : \"secondary\",\n                            size: \"sm\",\n                            children: \"Erase\"\n                        }, void 0, false, {\n                            fileName: \"/Users/alexlautin/Documents/GitHub/emoryhacks25/app/components/Whiteboard.tsx\",\n                            lineNumber: 373,\n                            columnNumber: 13\n                        }, this),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_ui_button__WEBPACK_IMPORTED_MODULE_2__.Button, {\n                            onClick: clearCanvas,\n                            variant: \"destructive\",\n                            size: \"sm\",\n                            children: \"Clear\"\n                        }, void 0, false, {\n                            fileName: \"/Users/alexlautin/Documents/GitHub/emoryhacks25/app/components/Whiteboard.tsx\",\n                            lineNumber: 380,\n                            columnNumber: 13\n                        }, this)\n                    ]\n                }, void 0, true, {\n                    fileName: \"/Users/alexlautin/Documents/GitHub/emoryhacks25/app/components/Whiteboard.tsx\",\n                    lineNumber: 359,\n                    columnNumber: 11\n                }, this)\n            }, void 0, false, {\n                fileName: \"/Users/alexlautin/Documents/GitHub/emoryhacks25/app/components/Whiteboard.tsx\",\n                lineNumber: 358,\n                columnNumber: 9\n            }, this)\n        ]\n    }, void 0, true, {\n        fileName: \"/Users/alexlautin/Documents/GitHub/emoryhacks25/app/components/Whiteboard.tsx\",\n        lineNumber: 345,\n        columnNumber: 5\n    }, this);\n}\n_s(Whiteboard, \"RJhy/cy74MQOBv9rJ+NOQ7i8HUE=\");\n_c = Whiteboard;\nvar _c;\n$RefreshReg$(_c, \"Whiteboard\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./app/components/Whiteboard.tsx\n"));

/***/ })

});